openapi: 3.0.0
info:
  title: API Ticketmaster
  description: API para gerenciamento de tickets, categorias e subcategorias.
  version: "1.0"
servers:
  - url: http://localhost:8080/ticketmaster
paths:
  /tickets:
    post:
      summary: Criar um novo ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
      responses:
        '201':
          description: Ticket criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
    get:
      summary: Listar todos os tickets
      responses:
        '200':
          description: Lista de tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketResponse'
  /tickets/{ticketId}:
    get:
      summary: Obter um ticket por ID
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
    put:
      summary: Atualizar um ticket
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
      responses:
        '200':
          description: Ticket atualizado com sucesso
    delete:
      summary: Deletar um ticket
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Ticket deletado com sucesso
  /categories:
    post:
      summary: Criar uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '201':
          description: Categoria criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
    get:
      summary: Listar todas as categorias
      responses:
        '200':
          description: Lista de categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryResponse'
  /categories/{categoryId}:
    get:
      summary: Obter uma categoria por ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
    put:
      summary: Atualizar uma categoria
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '200':
          description: Categoria atualizada com sucesso
    delete:
      summary: Deletar uma categoria
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Categoria deletada com sucesso
components:
  schemas:
    TicketRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        categoryId:
          type: integer
        subcategoryId:
          type: integer
        severityLevel:
          type: integer
    TicketResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        severityLevel:
          type: integer
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
        parent:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Subcategory'
    CategoryResponse:
      type: object
      properties:
        name:
          type: string
        parent:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Subcategory'
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        parent:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Subcategory'
    Subcategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
